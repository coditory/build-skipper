name: 'Coditory action skipper'
description: 'Skips actions when there are no important files submitted and previous run succeeded.'
branding:
  icon: file
  color: blue
inputs:
  files:
    description: 'Grep file patterns separated with new line that should trigger action.'
    required: false
    default: ''
  skip-files:
    description: 'Grep file patterns separated with new line that should not trigger action.'
    required: false
    default: ''
  check-prev-workflow-status:
    description: 'Whether to check the previous workflow status. If the workflow did not succeed for the previous commit the action will not skip.'
    required: false
    default: 'false'
  skip-commit-messages:
    description: 'Commit messages that will result in skip (substrings, seprated with new lines).'
    required: false
    default: ''
outputs:
  skip:
    description: 'Whether the action should be skipped'
    value: ${{ steps.skipper.outputs.skip }}
runs:
  using: "composite"
  steps:
    - id: skipper
      shell: bash
      env:
        FILES: ${{ inputs.files }}
        SKIP_FILES: ${{ inputs.skip-files }}
        CHECK_PREV_WORKFLOW_STATUS: ${{ inputs.check-prev-workflow-status }}
        SKIP_MESSAGES: ${{ inputs.skip-commit-messages }}
        PUSH_SHAS: ${{ join(github.event.commits.*.id, ' ') || 'none' }}
        PR_BASE_SHA: ${{ github.event.pull_request.base.sha }}
        PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
      run: $GITHUB_ACTION_PATH/action.sh
